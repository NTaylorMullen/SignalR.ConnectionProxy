<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <ProjectGuid>{7FE1A1AC-E1E3-498F-86AF-658D99068F96}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <OutputPath>bin</OutputPath>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <UseIISExpress>true</UseIISExpress>
    <LibraryOutputLocation>Scripts/signalR.connectionProxy.js</LibraryOutputLocation>
    <IISExpressSSLPort />
    <IISExpressAnonymousAuthentication />
    <IISExpressWindowsAuthentication />
    <IISExpressUseClassicPipelineMode />
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <PropertyGroup>
    <RootNamespace>SignalR.ConnectionProxy.Core</RootNamespace>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets" Condition="'$(VSToolsPath)' != ''" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>True</UseIIS>
          <AutoAssignPort>True</AutoAssignPort>
          <DevelopmentServerPort>0</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>http://localhost:31445/</IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl>
          </CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptRemoveComments>false</TypeScriptRemoveComments>
    <TypeScriptSourceMap>true</TypeScriptSourceMap>
    <TypeScriptOutFile>$(LibraryOutputLocation)</TypeScriptOutFile>
    <TypeScriptGeneratesDeclarations>true</TypeScriptGeneratesDeclarations>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptRemoveComments>true</TypeScriptRemoveComments>
    <TypeScriptSourceMap>false</TypeScriptSourceMap>
    <TypeScriptOutFile>$(LibraryOutputLocation)</TypeScriptOutFile>
    <TypeScriptGeneratesDeclarations>true</TypeScriptGeneratesDeclarations>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="DataStore\DataStore.js">
      <DependentUpon>DataStore.ts</DependentUpon>
    </Content>
    <Content Include="DataStore\DataStoreEventHandler.js">
      <DependentUpon>DataStoreEventHandler.ts</DependentUpon>
    </Content>
    <TypeScriptCompile Include="ProxyPingHandler.ts" />
    <Content Include="ProxyPingHandler.js">
      <DependentUpon>ProxyPingHandler.ts</DependentUpon>
    </Content>
    <Content Include="Scripts\typings\jquery\jquery.d.ts" />
    <Content Include="Scripts\typings\signalr\signalr.d.ts" />
    <Content Include="SignalR\SignalRExtension.js">
      <DependentUpon>SignalRExtension.ts</DependentUpon>
    </Content>
    <TypeScriptCompile Include="SignalR\SignalRExtension.ts" />
    <TypeScriptCompile Include="DataStore\DataStoreEventHandler.ts" />
    <Content Include="DataStore\DataStoreRingBuffer.js">
      <DependentUpon>DataStoreRingBuffer.ts</DependentUpon>
    </Content>
    <TypeScriptCompile Include="DataStore\DataStoreSubscription.ts" />
    <Content Include="DataStore\DataStoreSubscription.js">
      <DependentUpon>DataStoreSubscription.ts</DependentUpon>
    </Content>
    <TypeScriptCompile Include="DataStore\IDataStoreMessage.ts" />
    <Content Include="DataStore\IDataStoreMessage.js">
      <DependentUpon>IDataStoreMessage.ts</DependentUpon>
    </Content>
    <TypeScriptCompile Include="ProxyManager.ts" />
    <Content Include="ProxyManager.js">
      <DependentUpon>ProxyManager.ts</DependentUpon>
    </Content>
    <Content Include="Scripts\signalR.connectionProxy.d.ts" />
    <Content Include="Scripts\signalR.connectionProxy.js" />
    <Content Include="DataStore\Store.js">
      <DependentUpon>Store.ts</DependentUpon>
    </Content>
    <TypeScriptCompile Include="DataStore\Store.ts" />
    <TypeScriptCompile Include="DataStore\DataStoreRingBuffer.ts" />
    <TypeScriptCompile Include="DataStore\DataStore.ts" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TypeScript\Microsoft.TypeScript.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
</Project>